/* tslint:disable */
/* eslint-disable */
/**
 * Pawdopt api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Message } from './Message';
import {
    MessageFromJSON,
    MessageFromJSONTyped,
    MessageToJSON,
    MessageToJSONTyped,
} from './Message';
import type { Request } from './Request';
import {
    RequestFromJSON,
    RequestFromJSONTyped,
    RequestToJSON,
    RequestToJSONTyped,
} from './Request';

/**
 * Array of all messages
 * @export
 * @interface MessagePage
 */
export interface MessagePage {
    /**
     * 
     * @type {Array<Message>}
     * @memberof MessagePage
     */
    messages?: Array<Message>;
    /**
     * Array of dog requests associated with the chat
     * @type {Array<Request>}
     * @memberof MessagePage
     */
    requests?: Array<Request>;
    /**
     * Total number of unread messages
     * @type {number}
     * @memberof MessagePage
     */
    unreadCount?: number;
    /**
     * Total number of users
     * @type {number}
     * @memberof MessagePage
     */
    total?: number;
    /**
     * Current page number
     * @type {number}
     * @memberof MessagePage
     */
    page?: number;
    /**
     * Users per page
     * @type {number}
     * @memberof MessagePage
     */
    perPage?: number;
}

/**
 * Check if a given object implements the MessagePage interface.
 */
export function instanceOfMessagePage(value: object): value is MessagePage {
    return true;
}

export function MessagePageFromJSON(json: any): MessagePage {
    return MessagePageFromJSONTyped(json, false);
}

export function MessagePageFromJSONTyped(json: any, ignoreDiscriminator: boolean): MessagePage {
    if (json == null) {
        return json;
    }
    return {
        
        'messages': json['messages'] == null ? undefined : ((json['messages'] as Array<any>).map(MessageFromJSON)),
        'requests': json['requests'] == null ? undefined : ((json['requests'] as Array<any>).map(RequestFromJSON)),
        'unreadCount': json['unreadCount'] == null ? undefined : json['unreadCount'],
        'total': json['total'] == null ? undefined : json['total'],
        'page': json['page'] == null ? undefined : json['page'],
        'perPage': json['perPage'] == null ? undefined : json['perPage'],
    };
}

export function MessagePageToJSON(json: any): MessagePage {
    return MessagePageToJSONTyped(json, false);
}

export function MessagePageToJSONTyped(value?: MessagePage | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'messages': value['messages'] == null ? undefined : ((value['messages'] as Array<any>).map(MessageToJSON)),
        'requests': value['requests'] == null ? undefined : ((value['requests'] as Array<any>).map(RequestToJSON)),
        'unreadCount': value['unreadCount'],
        'total': value['total'],
        'page': value['page'],
        'perPage': value['perPage'],
    };
}

