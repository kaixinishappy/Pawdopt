/* tslint:disable */
/* eslint-disable */
/**
 * Pawdopt api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Details of each message
 * @export
 * @interface Message
 */
export interface Message {
    /**
     * 
     * @type {string}
     * @memberof Message
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Message
     */
    chatId: string;
    /**
     * 
     * @type {string}
     * @memberof Message
     */
    senderId: string;
    /**
     * 
     * @type {string}
     * @memberof Message
     */
    receiverId: string;
    /**
     * 
     * @type {string}
     * @memberof Message
     */
    content: string;
    /**
     * 
     * @type {Date}
     * @memberof Message
     */
    sentAt: Date;
    /**
     * 
     * @type {boolean}
     * @memberof Message
     */
    read: boolean;
}

/**
 * Check if a given object implements the Message interface.
 */
export function instanceOfMessage(value: object): value is Message {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('chatId' in value) || value['chatId'] === undefined) return false;
    if (!('senderId' in value) || value['senderId'] === undefined) return false;
    if (!('receiverId' in value) || value['receiverId'] === undefined) return false;
    if (!('content' in value) || value['content'] === undefined) return false;
    if (!('sentAt' in value) || value['sentAt'] === undefined) return false;
    if (!('read' in value) || value['read'] === undefined) return false;
    return true;
}

export function MessageFromJSON(json: any): Message {
    return MessageFromJSONTyped(json, false);
}

export function MessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): Message {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'chatId': json['chatId'],
        'senderId': json['senderId'],
        'receiverId': json['receiverId'],
        'content': json['content'],
        'sentAt': (new Date(json['sentAt'])),
        'read': json['read'],
    };
}

export function MessageToJSON(json: any): Message {
    return MessageToJSONTyped(json, false);
}

export function MessageToJSONTyped(value?: Message | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'chatId': value['chatId'],
        'senderId': value['senderId'],
        'receiverId': value['receiverId'],
        'content': value['content'],
        'sentAt': ((value['sentAt']).toISOString()),
        'read': value['read'],
    };
}

