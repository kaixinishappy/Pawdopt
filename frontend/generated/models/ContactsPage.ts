/* tslint:disable */
/* eslint-disable */
/**
 * Pawdopt api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Contacts } from './Contacts';
import {
    ContactsFromJSON,
    ContactsFromJSONTyped,
    ContactsToJSON,
    ContactsToJSONTyped,
} from './Contacts';

/**
 * Array of contacts shown on contact page
 * @export
 * @interface ContactsPage
 */
export interface ContactsPage {
    /**
     * 
     * @type {Array<Contacts>}
     * @memberof ContactsPage
     */
    chats?: Array<Contacts>;
    /**
     * Total number of contacts
     * @type {number}
     * @memberof ContactsPage
     */
    total?: number;
    /**
     * Current page number
     * @type {number}
     * @memberof ContactsPage
     */
    page?: number;
    /**
     * Contacts per page
     * @type {number}
     * @memberof ContactsPage
     */
    perPage?: number;
}

/**
 * Check if a given object implements the ContactsPage interface.
 */
export function instanceOfContactsPage(value: object): value is ContactsPage {
    return true;
}

export function ContactsPageFromJSON(json: any): ContactsPage {
    return ContactsPageFromJSONTyped(json, false);
}

export function ContactsPageFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContactsPage {
    if (json == null) {
        return json;
    }
    return {
        
        'chats': json['chats'] == null ? undefined : ((json['chats'] as Array<any>).map(ContactsFromJSON)),
        'total': json['total'] == null ? undefined : json['total'],
        'page': json['page'] == null ? undefined : json['page'],
        'perPage': json['perPage'] == null ? undefined : json['perPage'],
    };
}

export function ContactsPageToJSON(json: any): ContactsPage {
    return ContactsPageToJSONTyped(json, false);
}

export function ContactsPageToJSONTyped(value?: ContactsPage | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'chats': value['chats'] == null ? undefined : ((value['chats'] as Array<any>).map(ContactsToJSON)),
        'total': value['total'],
        'page': value['page'],
        'perPage': value['perPage'],
    };
}

