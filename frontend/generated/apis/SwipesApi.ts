/* tslint:disable */
/* eslint-disable */
/**
 * Pawdopt api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Swipe,
  SwipeCreate,
} from '../models/index';
import {
    SwipeFromJSON,
    SwipeToJSON,
    SwipeCreateFromJSON,
    SwipeCreateToJSON,
} from '../models/index';

export interface CreateSwipeRequest {
    swipeCreate: SwipeCreate;
}

/**
 * 
 */
export class SwipesApi extends runtime.BaseAPI {

    /**
     * Adopter swiped
     */
    async createSwipeRaw(requestParameters: CreateSwipeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Swipe>> {
        if (requestParameters['swipeCreate'] == null) {
            throw new runtime.RequiredError(
                'swipeCreate',
                'Required parameter "swipeCreate" was null or undefined when calling createSwipe().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/swipe`;

        const method: runtime.HTTPMethod = 'POST'
        const tosend = {
            path: urlPath,
            method: method,
            headers: headerParameters,
            query: queryParameters,
            body: SwipeCreateToJSON(requestParameters['swipeCreate']),
        }
        console.log(`swipecreatetojson output:: ${SwipeCreateFromJSON(requestParameters['swipeCreate'])}`)
        const response = await this.request(tosend, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SwipeFromJSON(jsonValue));
    }

    /**
     * Adopter swiped
     */
    async createSwipe(requestParameters: CreateSwipeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Swipe> {
        const response = await this.createSwipeRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
